{"ast":null,"code":"var _jsxFileName = \"/home/adreen/Development/code/phase-4/gym-management-system/frontend/src/pages/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [newSubscription, setNewSubscription] = useState({\n    plan_name: '',\n    price: '',\n    duration_months: '',\n    description: ''\n  });\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    password: '',\n    role: 'user'\n  });\n  const [newTrainer, setNewTrainer] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [editingUser, setEditingUser] = useState(null);\n  const [editingTrainer, setEditingTrainer] = useState(null);\n  const [assignTrainer, setAssignTrainer] = useState({\n    user_id: '',\n    trainer_id: ''\n  });\n  const navigate = useNavigate();\n\n  // ✅ Wrap fetchDashboard in useCallback to fix ESLint warning\n  const fetchDashboard = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/admin-dashboard', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDashboardData(data);\n      } else {\n        toast.error(data.error || 'Failed to load dashboard');\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('role');\n          navigate('/login');\n        }\n      }\n    } catch (error) {\n      toast.error('Network error!');\n      console.error('Fetch error:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n\n  // ✅ Include fetchDashboard in dependency array\n  useEffect(() => {\n    fetchDashboard();\n  }, [fetchDashboard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"3BHLHXm5kDCD6UKd7cqgHoDeDLU=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["useState","useEffect","useCallback","Toaster","toast","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","dashboardData","setDashboardData","loading","setLoading","newSubscription","setNewSubscription","plan_name","price","duration_months","description","newUser","setNewUser","username","email","password","role","newTrainer","setNewTrainer","editingUser","setEditingUser","editingTrainer","setEditingTrainer","assignTrainer","setAssignTrainer","user_id","trainer_id","navigate","fetchDashboard","response","fetch","headers","Authorization","localStorage","getItem","data","json","ok","error","status","removeItem","console","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/adreen/Development/code/phase-4/gym-management-system/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminDashboard() {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [newSubscription, setNewSubscription] = useState({ plan_name: '', price: '', duration_months: '', description: '' });\n  const [newUser, setNewUser] = useState({ username: '', email: '', password: '', role: 'user' });\n  const [newTrainer, setNewTrainer] = useState({ username: '', email: '', password: '' });\n  const [editingUser, setEditingUser] = useState(null);\n  const [editingTrainer, setEditingTrainer] = useState(null);\n  const [assignTrainer, setAssignTrainer] = useState({ user_id: '', trainer_id: '' });\n  const navigate = useNavigate();\n\n  // ✅ Wrap fetchDashboard in useCallback to fix ESLint warning\n  const fetchDashboard = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/admin-dashboard', {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDashboardData(data);\n      } else {\n        toast.error(data.error || 'Failed to load dashboard');\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('role');\n          navigate('/login');\n        }\n      }\n    } catch (error) {\n      toast.error('Network error!');\n      console.error('Fetch error:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n\n  // ✅ Include fetchDashboard in dependency array\n  useEffect(() => {\n    fetchDashboard();\n  }, [fetchDashboard]);\n\n  \n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      {/* ...all existing JSX */}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}